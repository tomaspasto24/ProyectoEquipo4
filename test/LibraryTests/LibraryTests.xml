<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibraryTests</name>
    </assembly>
    <members>
        <member name="T:BotTests.CommandHandlerTest">
            <summary>
            Clase para testear el CommandHandler
            </summary>
        </member>
        <member name="M:BotTests.CommandHandlerTest.SetUp">
            <summary>
            Metodo SetUp de los tests
            </summary>
        </member>
        <member name="M:BotTests.CommandHandlerTest.TestAdminCommandHandler">
            <summary>
            Test para probar los comandos que tiene un admin
            </summary>
        </member>
        <member name="M:BotTests.CommandHandlerTest.TestRoleUserCompanyCommandHandler">
            <summary>
            Test para probar los comandos que tiene un UserCompany
            </summary>
        </member>
        <member name="M:BotTests.CommandHandlerTest.TestRoleEntrepreneurCommandHandler">
            <summary>
            Test para probar los comandos que tiene un Emprendedor
            </summary>
        </member>
        <member name="T:BotTests.CompanySetTest">
            <summary>
            Clase para testear la clase CompanySet.
            </summary>
        </member>
        <member name="M:BotTests.CompanySetTest.SetUp">
            <summary>
            SetUp, asigna valores a las variables companyTest1, companyTest2, companyTest3.
            </summary>
        </member>
        <member name="M:BotTests.CompanySetTest.InstanceTest">
            <summary>
            Test que se encarga de comprobar que se cumpla el patrón Singleton en cuanto a que siempre se devuelva una
            única instancia y que el constructor sea privado.
            </summary>
        </member>
        <member name="M:BotTests.CompanySetTest.AddCompanyTest">
            <summary>
            Test que se encarga de testear el funcionamiento de la clase CompanySet de agregar
            clases Empresa al sistema.
            </summary>
        </member>
        <member name="M:BotTests.CompanySetTest.DeleteCompanyTest">
            <summary>
            Test que se encarga de testear el funcionamiento de la clase CompanySet de eliminar 
            clases Empresa del sistema.
            </summary>
        </member>
        <member name="M:BotTests.CompanySetTest.ReturnListElementsTest">
            <summary>
            ReturnListElementsTest testea que el string de la lista de Empresas funcione bien.
            </summary>
        </member>
        <member name="M:BotTests.CompanySetTest.ContainsCompanyInListCompaniesTest">
            <summary>
            ContainsCompanyInListCompaniesTest comprueba que el funcionamiento de encontrar
            si las clases Empresa se encuentran en el sistema con la condición del nombre de la Empresa (linea 118 
            da <c>True</c> porque encuentra el nombre, como debe ser ya que no se admiten 2 empresas diferentes con mismo nombre.
            </summary>
        </member>
        <member name="T:BotTests.CompanyTest">
            <summary>
            Clase para testear la clase Company.
            </summary>
        </member>
        <member name="M:BotTests.CompanyTest.SetUp">
            <summary>
            SetUp, asigna valores a las variables location, companyTest, initialMaterial.
            </summary>
        </member>
        <member name="M:BotTests.CompanyTest.InstanceTest">
            <summary>
            Test que se encarga de verificar que la instancia de la clase Empresa y sus atributos
            internos esten correctamente definidos.
            </summary>
        </member>
        <member name="M:BotTests.CompanyTest.HistorialPublicationsTest">
            <summary>
            Test que se encarga de comprobar el correcto funcionamiento de la lista historial de publicaciones.
            </summary>
        </member>
        <member name="M:BotTests.CompanyTest.OwnPublicationsTest">
            <summary>
            Test que se encarga de verificar que funcionen bien los métodos que involucran la lista
            de publicaciones propias de la empresa.
            </summary>
        </member>
        <member name="M:BotTests.CompanyTest.UsersCompanyTest">
            <summary>
            Test que se encarga de validar que los usuarios puedan añadirse a una clase Empresa y también
            puedan ser eliminados.
            </summary>
        </member>
        <member name="M:BotTests.CompanyTest.ReturnContactTest">
            <summary>
            Testea que el método ReturnContactTest retorne la cadena de carácteres con la información correcta.
            </summary>
        </member>
        <member name="T:BotTests.GeoLocationTests">
            <summary>
            GeoLocationTests se encarga de testear los atributos y las funcionalidades de la clase
            GeoLocation.
            </summary>
        </member>
        <member name="M:BotTests.GeoLocationTests.SetUp">
            <summary>
            Este método se encarga de inicializar los atributos address, city y departament.
            Además de construir el objeto a testear location.
            </summary>
        </member>
        <member name="M:BotTests.GeoLocationTests.TestLocationInstance">
            <summary>
            Test que se encarga de comprobar la instancia de la clase GeoLocation.
            </summary>
        </member>
        <member name="M:BotTests.GeoLocationTests.TestDuration">
            <summary>
            Test que se encarga de testear el calculo de duración que realiza 
            el método CalculateDuration de la clase GeoLocation.
            </summary>
        </member>
        <member name="M:BotTests.GeoLocationTests.TestDistance">
            <summary>
            Test que se encarga de testear el calculo de distancia que realiza 
            el método CalculateDistance de la clase GeoLocation.
            </summary>        
        </member>
        <member name="T:BotTests.MaterialTests">
            <summary>
            Test de la clase Material que se encarga de testear todas las funcionalidades
            y opciones que otorga la clase a los demás objetos.
            </summary>
        </member>
        <member name="M:BotTests.MaterialTests.CreateSimpleMaterial">
            <summary>
            Test que se encarga de comprobar los atributos
            básicos de la clase Material mediante la creación de un simple Material.
            </summary>
        </member>
        <member name="M:BotTests.MaterialTests.KeyWordsTest">
            <summary>
            Test que se encarga de testear la funcionalidad de obtener, agregar y quitar 
            palabras clave anidadas a la clase Material.
            </summary>
        </member>
        <member name="T:BotTests.PublicationSetTest">
            <summary>
            Clase para testear la clase PublicationSet
            </summary>
        </member>
        <member name="M:BotTests.PublicationSetTest.SetUp">
            <summary>
            SetUp, asigna valores a las variables companyTest, initialMaterial, publicationTest1., publicationTest2, publicationTest3.
            </summary>
        </member>
        <member name="M:BotTests.PublicationSetTest.AddPublicationTest">
            <summary>
            Test que se encarga de testear el funcionamiento de la clase PublicationSet de agregar
            clases Publicación al sistema.
            </summary>
        </member>
        <member name="M:BotTests.PublicationSetTest.ContainsPublicationInListCompaniesTest">
            <summary>
            Test que se encarga de comprobar que el funcionamiento de ContainsPublicationInListPublications sea el 
            correcto y que se puedan identificar las pbulicaciones contenidas.
            </summary>
        </member>
        <member name="M:BotTests.PublicationSetTest.DeletePublicationTest">
            <summary>
            Test que se encarga de testear el funcionamiento de la clase PublicationSet de eliminar 
            clases Publicación del sistema.
            </summary>
        </member>
        <member name="M:BotTests.PublicationSetTest.ReturnListElementsTest">
            <summary>
            ReturnListElementsTest testea que el string de la lista de Publicaciones funcione bien.
            </summary>
        </member>
        <member name="M:BotTests.PublicationSetTest.ContainsCompanyInListPublicationsTest">
            <summary>
            ContainsPublicationInListCompaniesTest comprueba que el funcionamiento de encontrar
            si las clases Publicación se encuentran en el sistema con la condición del nombre de la Publicación.
            </summary>
        </member>
        <member name="T:BotTests.PublishPublicationTests">
            <summary>
            PublishPublicationTests se encarga de testear el funcionamiento de la 
            funcionalidad de Publicar Publicación que en un futuro será implementada 
            en el Bot de Telegram como /publicar.
            </summary>
        </member>
        <member name="M:BotTests.PublishPublicationTests.Setup">
            <summary>
            Método que crea y asgina las instancias a los atributos location, companyTest, initialMaterial,
            entrepreneurLocation, entrepreneur; que serán usados por los siguientes métodos. 
            </summary>
        </member>
        <member name="M:BotTests.PublishPublicationTests.TestSimplePublication">
            <summary>
            Este test se encarga de crear una publicación simple y de comprobar que sus 
            atributos no sean null.
            </summary>
        </member>
        <member name="M:BotTests.PublishPublicationTests.TestPublishPublicationAndAddMaterials">
            <summary>
            Test que se encarga de comprobar la creación de una publicación y además de crear materiales
            para comprobar que se agregan a la lista de materiales de la publicación.
            </summary>
        </member>
        <member name="M:BotTests.PublishPublicationTests.TestPublicationClosed">
            <summary>
            Test que se encarga de comprobar el funcionamiento de la clase de cerrarse
            a si misma.
            </summary>
        </member>
        <member name="M:BotTests.PublishPublicationTests.TestPublicationClosedWithInterestedPerson">
            <summary>
            Test que se encarga de comprobar el funcionamiento de la clase de cerrarse
            a si misma y de setar y devolver a la persona interesada.
            </summary>
        </member>
        <member name="T:BotTests.ReportTest">
            <summary>
            Clase ReportTest la cual se encarga de testear las funcionalidades de la clase EntrepreneurReport y CompanyReport.
            </summary>
        </member>
        <member name="M:BotTests.ReportTest.Setup">
            <summary>
            Método que crea y asgina las instancias a los atributos que seran utilizados para ejecutar los test.
            </summary>
        </member>
        <member name="M:BotTests.ReportTest.CompanyReportClosedPublicationTest">
            <summary>
            Test de reporte empresa cuando la publicacion esta cerrada.
            </summary>
        </member>
        <member name="M:BotTests.ReportTest.CompanyReportPublicationNotClosedTest">
            <summary>
            Test de reporte empresa cuando la publicacion no esta cerrada.
            </summary>
        </member>
        <member name="M:BotTests.ReportTest.EntrepreneurReportClosedPublicationTest">
            <summary>
            Test del reporte emprendedor cuando la publicacion esta cerrada.
            </summary>
        </member>
        <member name="M:BotTests.ReportTest.EntrepreneurReportPublicationNotClosedTest">
            <summary>
            Test del reporte emprendedor en caso de que la publicacion no este cerrada.
            </summary>
        </member>
    </members>
</doc>
