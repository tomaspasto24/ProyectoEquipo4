<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="T:Bot.AbstractBot">
            <summary>
            Bot abstracto del cual heredar√°n los bots concretos.
            </summary>
        </member>
        <member name="M:Bot.AbstractBot.#ctor">
            <summary>
            Constructor de la clase AbstractBot
            </summary>
        </member>
        <member name="M:Bot.AbstractBot.StartCommunication">
            <summary>
            Metodo publico y abstracto para comenzar la comunicacion entre el usuario y el canal y el bot o la consola.
            </summary>
        </member>
        <member name="M:Bot.AbstractBot.SendMessage(System.String,System.String)">
            <summary>
            Metodo para enviar el mensaje por el canal donde se esta comunicando
            </summary>
            <param name="id">id del usuario con el que dialoga el bot</param>
            <param name="text">mensaje que se quiere enviar al usuario</param>
        </member>
        <member name="M:Bot.AbstractBot.HandleMessage(Bot.Message)">
            <summary>
            Metodo para delegar el mensaje recibido.
            </summary>
            <param name="text">text es el mensaje recibido, de tipo Message. Ademas del mensaje contiene el User Id del usuario</param>
        </member>
        <member name="T:Bot.ConsoleBot">
            <summary>
            Bot concreto de consola que hereda de AbstractBot
            </summary>
        </member>
        <member name="M:Bot.ConsoleBot.#ctor">
            <summary>
            Constructor de ConsoleBot que utiliza el constructor de AbstractBot
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bot.ConsoleBot.SendMessage(System.String,System.String)">
            <summary>
            Manda un mensaje, en este caso, por consola.
            </summary>
            <param name="id">Id del usuario con el que dialoga el bot</param>
            <param name="text">Mensaje que se quiere enviar al usuario</param>
        </member>
        <member name="M:Bot.ConsoleBot.StartCommunication">
            <summary>
            Metodo StartCommunication, publico que hace override del metodo declarado en AbstractBot
            Es el metodo que da comienzo a la conversacion entre el usuario y el bot concreto o consola.
            </summary>
        </member>
        <member name="T:Bot.IBot">
            <summary>
            Interfaz IBot que contiene los metodos escenciales para los Bots.
            </summary>
        </member>
        <member name="M:Bot.IBot.StartCommunication">
            <summary>
            StartCommunication es el metodo que se encarga de comenzar la charla entre el usuario y el bot concreto o consola.
            </summary>
        </member>
        <member name="M:Bot.IBot.SendMessage(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="text"></param>
        </member>
        <member name="M:Bot.IBot.HandleMessage(Bot.Message)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:Bot.CommandCondition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.CommandCondition.VerifyCondition(Bot.Message)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.ICondition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.ICondition.VerifyCondition(Bot.Message)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.LoginCondition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.LoginCondition.VerifyCondition(Bot.Message)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.LogoutCondition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.LogoutCondition.VerifyCondition(Bot.Message)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.NoCommandCondition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.NoCommandCondition.VerifyCondition(Bot.Message)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.RegisterCondition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.RegisterCondition.VerifyCondition(Bot.Message)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.StartCondition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.StartCondition.VerifyCondition(Bot.Message)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.AbstractHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.AbstractHandler.#ctor(Bot.ICondition)">
            <summary>
            
            </summary>
            <param name="condition"></param>
        </member>
        <member name="P:Bot.AbstractHandler.Succesor">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Bot.AbstractHandler.Condition">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:Bot.AbstractHandler.Handler(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Bot.AbstractHandler.AddSuccesor(Bot.AbstractHandler)">
            <summary>
            
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:Bot.AbstractHandler.handleRequest(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Bot.CommandHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.CommandHandler.#ctor(Bot.CommandCondition)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bot.CommandHandler.handleRequest(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Bot.LoginHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.LoginHandler.#ctor(Bot.LoginCondition)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bot.LoginHandler.handleRequest(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Bot.LogoutHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.LogoutHandler.#ctor(Bot.LogoutCondition)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bot.LogoutHandler.handleRequest(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Bot.NoCommandHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.NoCommandHandler.#ctor(Bot.NoCommandCondition)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bot.NoCommandHandler.handleRequest(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Bot.RegisterHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.RegisterHandler.#ctor(Bot.RegisterCondition)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bot.RegisterHandler.handleRequest(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Bot.StartHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.StartHandler.#ctor(Bot.StartCondition)">
            <summary>
            
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bot.StartHandler.handleRequest(Bot.Message)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:Bot.Commands">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.Commands.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.Commands.ReturnCommands(System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="P:Bot.Commands.CommandsList">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:Bot.Commands.ExistingCommand(System.String)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Bot.Setup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.Setup.HandlerSetup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bot.Message">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bot.Message.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="message"></param>
        </member>
        <member name="P:Bot.Message.UserId">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Bot.Message.Text">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="T:Bot.State">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bot.State.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bot.State.Chatting">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bot.UserRelated">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bot.UserRelated.State">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Bot.UserRelated.Channel">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:Bot.UserRelated.#ctor">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
